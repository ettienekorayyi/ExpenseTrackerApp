[{"C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\index.js":"1","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\reportWebVitals.js":"2","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\app\\layout\\App.js":"3","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\nav\\Header.js":"4","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\app\\common\\styleHelper.js":"5","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\ExpensesList.js":"6","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\ExpensesSummary.js":"7","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\ExpensesCategory.js":"8","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\categories\\Categories.js":"9","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\categories\\CategoryChartWidget.js":"10","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\Dashboard.js":"11","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\ExpensesContent.js":"12","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\store\\index.js":"13","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\reducers\\index.js":"14","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\actions\\index.js":"15","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\actions\\actionTypes.js":"16","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\NewExpense.js":"17"},{"size":871,"mtime":1612325821695,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":983,"mtime":1611283176247,"results":"21","hashOfConfig":"19"},{"size":1589,"mtime":1611063522175,"results":"22","hashOfConfig":"19"},{"size":210,"mtime":1610674583237,"results":"23","hashOfConfig":"19"},{"size":2477,"mtime":1612485800887,"results":"24","hashOfConfig":"19"},{"size":1399,"mtime":1611063522174,"results":"25","hashOfConfig":"19"},{"size":3234,"mtime":1610852085972,"results":"26","hashOfConfig":"19"},{"size":4011,"mtime":1610852085970,"results":"27","hashOfConfig":"19"},{"size":667,"mtime":1610852085971,"results":"28","hashOfConfig":"19"},{"size":1181,"mtime":1611063522171,"results":"29","hashOfConfig":"19"},{"size":1188,"mtime":1612435339686,"results":"30","hashOfConfig":"19"},{"size":120,"mtime":1612263849824,"results":"31","hashOfConfig":"19"},{"size":386,"mtime":1612265180324,"results":"32","hashOfConfig":"19"},{"size":491,"mtime":1612514839542,"results":"33","hashOfConfig":"19"},{"size":41,"mtime":1612264800902,"results":"34","hashOfConfig":"19"},{"size":2521,"mtime":1612515436364,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"2t74vd",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\index.js",["82"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./index.css\";\r\nimport App from \"./app/layout/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport * as actions from './actions';\r\n\r\n//store.dispatch(actions.addExpense());\r\n//store.dispatch(actions.addExpense());\r\n//console.log(store.getState());\r\n// send the store to the provider and use props to access the dispatch\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n",["83","84"],"C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\reportWebVitals.js",[],["85","86"],"C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\app\\layout\\App.js",["87","88","89","90","91","92","93","94"],"import { Grid, Header as SemanticUIHeader } from \"semantic-ui-react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Header from \"../../features/nav/Header\";\r\nimport ExpensesList from \"../../features/expenses/dashboard/ExpensesList\";\r\nimport ExpensesContent from \"../../features/expenses/dashboard/ExpensesContent\";\r\nimport ExpensesSummary from \"../../features/expenses/dashboard/ExpensesSummary\";\r\nimport ExpensesCategory from \"../../features/expenses/dashboard/ExpensesCategory\";\r\nimport Dashboard from \"../../features/expenses/dashboard/Dashboard\";\r\nimport Categories from \"../../features/categories/Categories\";\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  /* \r\n  \r\n  */\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"default\">\r\n        <Header />\r\n        <Route exact path=\"/\" component={Dashboard} />\r\n        <Route path=\"/expenses\" component={ExpensesContent} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\nav\\Header.js",["95","96"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Image, Segment, Grid } from \"semantic-ui-react\";\r\nimport { headerMenuStyle } from \"../../app/common/styleHelper\";\r\n\r\nconst Header = () => {\r\n  const [activeItem, setActiveItem] = useState(\"home\");\r\n  const handleItemClick = (e, { name }) => setActiveItem(name);\r\n\r\n  return (\r\n    <Menu inverted pointing vertical style={headerMenuStyle}>\r\n      <Menu.Item>\r\n        <Image\r\n          src=\"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n          size=\"medium\"\r\n          circular\r\n          centered\r\n        />\r\n      </Menu.Item>\r\n      <Link to=\"/\">\r\n        <Menu.Item\r\n          name=\"home\"\r\n          active={activeItem === \"home\"}\r\n          onClick={handleItemClick}\r\n        />\r\n      </Link>\r\n      <Link to=\"/expenses\">\r\n        <Menu.Item\r\n          name=\"expenses\"\r\n          active={activeItem === \"expenses\"}\r\n          onClick={handleItemClick}\r\n        />\r\n      </Link>\r\n      <Menu.Item\r\n        name=\"categories\"\r\n        active={activeItem === \"categories\"}\r\n        onClick={handleItemClick}\r\n      />\r\n      <Menu.Item\r\n        name=\"withdraw\"\r\n        active={activeItem === \"withdraw\"}\r\n        onClick={handleItemClick}\r\n      />\r\n      <Menu.Item\r\n        name=\"calendar\"\r\n        active={activeItem === \"calendar\"}\r\n        onClick={handleItemClick}\r\n      />\r\n      <Menu.Item\r\n        name=\"Settings\"\r\n        active={activeItem === \"settings\"}\r\n        onClick={handleItemClick}\r\n      />\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\app\\common\\styleHelper.js",[],"C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\ExpensesList.js",["97","98","99","100","101"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Segment,\r\n  Header as SemantiUiHeader,\r\n  Divider,\r\n  Item,\r\n  Icon,\r\n  Grid,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../actions';\r\n\r\nconst paragraph = \"lorem ioafjfajnfaj  sa dafn dnfkankfak fdsajk\";\r\nconst image = \"https://react.semantic-ui.com/images/wireframe/square-image.png\";\r\n\r\nconst items = [\r\n  {\r\n    childKey: 0,\r\n    image,\r\n    header: \"Header list\",\r\n    description:\r\n      \"lorem ipsum dolor ipa wjai jdkjaf aw sadfwcafafa fafafs lorem ipsum dolor ipa wjai jdkjaf aw sadfwcafafa fafafs\",\r\n    meta: \"Metadata\",\r\n    extra: (\r\n      <button>\r\n        <Icon className=\"pencil alternate\" />\r\n      </button>\r\n    )\r\n  },\r\n  {\r\n    childKey: 1,\r\n    image,\r\n    header: \"Header\",\r\n    description: \"Description\",\r\n    meta: \"Metadata\",\r\n    extra: (\r\n      <button>\r\n        <Icon className=\"pencil alternate\" />\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    childKey: 2,\r\n    image,\r\n    header: \"Header\",\r\n    description: \"Description\",\r\n    meta: \"Metadata\",\r\n    extra: (\r\n      <button>\r\n        <Icon className=\"pencil alternate\" />\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    childKey: 3,\r\n    image,\r\n    header: \"Header\",\r\n    description: \"Description\",\r\n    meta: \"Metadata\",\r\n    extra: (\r\n      <button>\r\n        <Icon className=\"pencil alternate\" />\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    childKey: 4,\r\n    image,\r\n    header: \"Header\",\r\n    description: \"Description\",\r\n    meta: \"Metadata\",\r\n    extra: (\r\n      <button>\r\n        <Icon className=\"pencil alternate\" />\r\n      </button>\r\n    ),\r\n  },\r\n];\r\n\r\nexport const ExpensesList = (props) => {\r\n  \r\n  //console.log(props)\r\n\r\n  useEffect(() => {\r\n    props.dispatch(actions.addExpense());\r\n    \r\n  }, [])\r\n  return (\r\n    <Item width={10}>\r\n      <Item.Header style={{ margin: 20 }}>\r\n        <Divider horizontal>\r\n          <SemantiUiHeader as=\"h1\">\r\n            <Icon name=\"calculator\" />\r\n            Transactions\r\n          </SemantiUiHeader>\r\n        </Divider>\r\n      </Item.Header>\r\n      <Item.Content>\r\n        <Item.Group id=\"expense-items\" items={items} />\r\n      </Item.Content>\r\n    </Item>\r\n  );\r\n};\r\n\r\n//import the connect component from the redux library\r\n// create mapStateToProps\r\n// console log the props\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    expenses: state.expenses\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExpensesList);\r\n","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\ExpensesSummary.js",["102"],"import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Header as SemantiUiHeader,\r\n  Divider,\r\n  Item,\r\n  Icon,\r\n  Card,\r\n  Grid,\r\n} from \"semantic-ui-react\";\r\n\r\nconst items = [\r\n  {\r\n    key: \"sdfaa1\",\r\n    header: \"Total Expenses\",\r\n    description: \"1200\",\r\n    meta: \"ROI: 30%\",\r\n  },\r\n  {\r\n    key: \"sdfaa2\",\r\n    header: \"Income\",\r\n    description: \"3000\",\r\n    meta: \"ROI: 30%\",\r\n  },\r\n  {\r\n    key: \"sdfaa3\",\r\n    header: \"Remaining\",\r\n    description: \"1200\",\r\n    meta: \"ROI: 30%\",\r\n  },\r\n];\r\n\r\nconst ExpensesSummary = () => {\r\n  return (\r\n    <Item width={10}>\r\n      <Item.Header style={{ margin: 20 }}>\r\n        <Divider horizontal>\r\n          <SemantiUiHeader as=\"h1\">\r\n            <Icon name=\"tag\" />\r\n            Summary\r\n          </SemantiUiHeader>\r\n        </Divider>\r\n      </Item.Header>\r\n      <Grid columns={3}>\r\n        {items.map((i) => {\r\n          return (\r\n            <Grid.Column>\r\n              <Card>\r\n                <Card.Content>\r\n                  <Card.Header key={i.key}>{i.header}</Card.Header>\r\n                  <Card.Description>\r\n                    <i class=\"dollar sign icon\" />\r\n                    <strong>{i.description}</strong>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n              </Card>\r\n            </Grid.Column>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default ExpensesSummary;\r\n","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\ExpensesCategory.js",["103","104","105","106","107"],"import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Header as SemantiUiHeader,\r\n  Header,\r\n  Item,\r\n  Icon,\r\n  Divider,\r\n  Grid,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport CategoryChartWidget from \"../../categories/CategoryChartWidget\";\r\n\r\nconst items = [\r\n  {\r\n    key: \"sdfaa1\",\r\n    title: \"Food and Beverages\",\r\n    value: 1200,\r\n    meta: \"ROI: 30%\",\r\n    color: \"#FAE2D2\",\r\n  },\r\n  {\r\n    key: \"sdfaa2\",\r\n    title: \"Groceries\",\r\n    value: 300,\r\n    meta: \"ROI: 30%\",\r\n    color: \"#F58234\",\r\n  },\r\n  {\r\n    key: \"sdfaa3\",\r\n    title: \"Household\",\r\n    value: 1000,\r\n    meta: \"ROI: 30%\",\r\n    color: \"#F58234\",\r\n  },\r\n];\r\n\r\nconst foodAndBeverageMock = [\r\n  { title: \"Food & Beverages\", value: 120, color: \"#FAE2D2\" },\r\n  { title: \"Budget\", value: 150, color: \"#F58234\" },\r\n];\r\n\r\nconst groceriesMock = [\r\n  { title: \"Groceries\", value: 130, color: \"#0B69FF\" },\r\n  { title: \"Budget\", value: 120, color: \"#B7D3FF\" },\r\n];\r\n\r\nconst householdMock = [\r\n  { title: \"Household\", value: 170, color: \"#0B69FF\" },\r\n  { title: \"Budget\", value: 150, color: \"#B7D3FF\" },\r\n];\r\n\r\nconst ExpensesCategory = () => {\r\n  return (\r\n    <Grid className=\"colored\">\r\n      <Header as='h2' style={{ color: '#ffffff'}}>Expenses by Category</Header>\r\n      <Grid.Row className=\"category-row\">\r\n        <Grid.Column width={3}>\r\n          <CategoryChartWidget dataMock={foodAndBeverageMock} />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={10}>\r\n          <Item.Header>\r\n            <Item.Header>\r\n              <Header as=\"h2\">{items[1].title}</Header>\r\n            </Item.Header>\r\n            <Item.Extra>\r\n              <span>$1200</span>\r\n            </Item.Extra>\r\n          </Item.Header>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={3}>\r\n          <Item.Header>\r\n            <Header as=\"h2\">%</Header>\r\n          </Item.Header>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className=\"category-row\">\r\n        <Grid.Column width={3}>\r\n          <CategoryChartWidget dataMock={groceriesMock} />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={10}>\r\n          <Item.Header>\r\n            <Item.Header>\r\n              <Header as=\"h2\">{items[2].title}</Header>\r\n            </Item.Header>\r\n            <Item.Extra>\r\n              <span>$1200</span>\r\n            </Item.Extra>\r\n          </Item.Header>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={3}>\r\n          <Item.Header>\r\n            <Header as=\"h2\">%</Header>\r\n          </Item.Header>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className=\"category-row\">\r\n        <Grid.Column width={3}>\r\n          <CategoryChartWidget dataMock={householdMock} />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={10}>\r\n          <Item.Header>\r\n            <Item.Header>\r\n              <Header as=\"h2\">{items[0].title}</Header>\r\n            </Item.Header>\r\n            <Item.Extra>\r\n              <span>{items[0].value}</span>\r\n            </Item.Extra>\r\n          </Item.Header>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={3}>\r\n          <Item.Header>\r\n            <Header as=\"h2\">%</Header>\r\n          </Item.Header>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ExpensesCategory;\r\n","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\categories\\Categories.js",["108","109","110","111","112","113"],"import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Header as SemantiUiHeader,\r\n  Icon,\r\n  Image,\r\n  Card,\r\n  Divider,\r\n  Item,\r\n} from \"semantic-ui-react\";\r\n\r\nconst Categories = () => {\r\n  return (\r\n    <Item>\r\n      <Item.Header style={{ margin: 20 }}>\r\n        <Divider horizontal>\r\n          <SemantiUiHeader as=\"h1\" style={{ color: 'white' }}>\r\n            <Icon name=\"calculator\" />\r\n            Categories\r\n          </SemantiUiHeader>\r\n        </Divider>\r\n      </Item.Header>\r\n      <Item.Group\r\n        style={{ width: \"inherit\", overflowX: \"hidden\", height: \"55vh\" }}\r\n      >\r\n        <Card.Group>\r\n          <Card>\r\n            <Image\r\n              src=\"https://react.semantic-ui.com/images/avatar/large/daniel.jpg\"\r\n              wrapped\r\n              ui={false}\r\n            />\r\n            <Card.Content>\r\n              <Card.Header>Daniel</Card.Header>\r\n              <Card.Meta>Joined in 2016</Card.Meta>\r\n              <Card.Description>\r\n                Daniel is a comedian living in Nashville.\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a>\r\n                <Icon name=\"user\" />\r\n                10 Friends\r\n              </a>\r\n            </Card.Content>\r\n          </Card>\r\n\r\n          <Card>\r\n            <Image\r\n              src=\"https://react.semantic-ui.com/images/avatar/large/daniel.jpg\"\r\n              wrapped\r\n              ui={false}\r\n            />\r\n            <Card.Content>\r\n              <Card.Header>Daniel</Card.Header>\r\n              <Card.Meta>Joined in 2016</Card.Meta>\r\n              <Card.Description>\r\n                Daniel is a comedian living in Nashville.\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a>\r\n                <Icon name=\"user\" />\r\n                10 Friends\r\n              </a>\r\n            </Card.Content>\r\n          </Card>\r\n\r\n          <Card>\r\n            <Image\r\n              src=\"https://react.semantic-ui.com/images/avatar/large/daniel.jpg\"\r\n              wrapped\r\n              ui={false}\r\n            />\r\n            <Card.Content>\r\n              <Card.Header>Daniel</Card.Header>\r\n              <Card.Meta>Joined in 2016</Card.Meta>\r\n              <Card.Description>\r\n                Daniel is a comedian living in Nashville.\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a>\r\n                <Icon name=\"user\" />\r\n                10 Friends\r\n              </a>\r\n            </Card.Content>\r\n          </Card>\r\n\r\n          <Card>\r\n            <Image\r\n              src=\"https://react.semantic-ui.com/images/avatar/large/daniel.jpg\"\r\n              wrapped\r\n              ui={false}\r\n            />\r\n            <Card.Content>\r\n              <Card.Header>Daniel</Card.Header>\r\n              <Card.Meta>Joined in 2016</Card.Meta>\r\n              <Card.Description>\r\n                Daniel is a comedian living in Nashville.\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a>\r\n                <Icon name=\"user\" />\r\n                10 Friends\r\n              </a>\r\n            </Card.Content>\r\n          </Card>\r\n\r\n          <Card>\r\n            <Image\r\n              src=\"https://react.semantic-ui.com/images/avatar/large/daniel.jpg\"\r\n              wrapped\r\n              ui={false}\r\n            />\r\n            <Card.Content>\r\n              <Card.Header>Daniel</Card.Header>\r\n              <Card.Meta>Joined in 2016</Card.Meta>\r\n              <Card.Description>\r\n                Daniel is a comedian living in Nashville.\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a>\r\n                <Icon name=\"user\" />\r\n                10 Friends\r\n              </a>\r\n            </Card.Content>\r\n          </Card>\r\n        </Card.Group>\r\n      </Item.Group>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\categories\\CategoryChartWidget.js",["114","115","116","117","118","119","120","121","122"],"import React from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport {\r\n  Segment,\r\n  Header as SemantiUiHeader,\r\n  Header,\r\n  Item,\r\n  Icon,\r\n  Card,\r\n  Grid,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\n\r\nconst groceryMock = [\r\n  {\r\n    title: \"Groceries\",\r\n    value: 200,\r\n    color: \"#FAE2D2\",\r\n  },\r\n  {\r\n    title: \"Budget\",\r\n    value: 300,\r\n    color: \"#F58234\",\r\n  },\r\n];\r\n\r\nconst CategoryChartWidget = (props) => {\r\n  return (\r\n    <PieChart\r\n      className=\"donut-chart\"\r\n      data={props.dataMock}\r\n      lineWidth={39}\r\n      rounded\r\n      lengthAngle={-360}\r\n      animate\r\n    />\r\n  );\r\n};\r\n\r\nexport default CategoryChartWidget;\r\n","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\Dashboard.js",["123","124"],"import { Grid, Header as SemanticUIHeader, Segment } from \"semantic-ui-react\";\r\nimport Header from \"../../nav/Header\";\r\nimport ExpensesList from \"../dashboard/ExpensesList\";\r\nimport ExpensesSummary from \"../dashboard/ExpensesSummary\";\r\nimport ExpensesCategory from \"../dashboard/ExpensesCategory\";\r\nimport Categories from \"../../categories/Categories\";\r\nimport \"../../../app/layout/styles.css\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Grid columns={3}>\r\n      <Grid.Column id=\"navigation-grid\" />\r\n      <Grid.Column id=\"dashboard-expenses-grid\">\r\n        <Segment id=\"expenses-summary\">\r\n          <ExpensesSummary />\r\n        </Segment>\r\n        <Segment id=\"expenses-list\">\r\n          <ExpensesList />\r\n        </Segment>\r\n      </Grid.Column>\r\n      <Grid.Column id=\"dashboard-misc-grid\">\r\n        <Grid.Row className='dashboard-content-row'>\r\n          <SemanticUIHeader as=\"h2\" style={{ color: \"white\" }}>\r\n            Search Feature\r\n          </SemanticUIHeader>\r\n        </Grid.Row>\r\n        <Grid.Row className='dashboard-content-row'>\r\n          <ExpensesCategory />\r\n        </Grid.Row>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\ExpensesContent.js",["125"],"import {\r\n  Segment,\r\n  Button,\r\n  Grid,\r\n  Item,\r\n  Header as SemanticUIHeader,\r\n} from \"semantic-ui-react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport NewExpense from './NewExpense';\r\n\r\nconst ExpensesContent = () => {\r\n  return (\r\n    <Grid columns={3}>\r\n      <Grid.Column id=\"navigation-grid\" />\r\n      <Grid.Column id=\"expenses-list-grid\">\r\n        <Segment.Group>\r\n          <Segment id=\"expenses-content\">\r\n            <Grid.Row className='expenses-content-row'>\r\n              <ExpensesList />\r\n            </Grid.Row>\r\n            <Grid.Row className='expenses-content-row'>\r\n              <Segment>\r\n                <Button secondary>\r\n                  <span><i className='plus icon'></i></span>\r\n                </Button>\r\n              </Segment>\r\n            </Grid.Row>\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Grid.Column>\r\n      <Grid.Column id=\"expenses-crud-grid\">\r\n        <Grid.Row className='expenses-content-row'>\r\n          <SemanticUIHeader as=\"h2\" style={{ color: \"white\" }}>\r\n            <NewExpense />\r\n          </SemanticUIHeader>\r\n        </Grid.Row>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ExpensesContent;\r\n","C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\store\\index.js",[],"C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\reducers\\index.js",[],"C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\actions\\index.js",[],"C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\actions\\actionTypes.js",[],"C:\\Users\\Stephen\\Documents\\Github\\ExpenseTrackerApp\\ExpenseTracker\\client-app\\src\\features\\expenses\\dashboard\\NewExpense.js",["126"],{"ruleId":"127","severity":1,"message":"128","line":8,"column":13,"nodeType":"129","messageId":"130","endLine":8,"endColumn":20},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"131","replacedBy":"135"},{"ruleId":"133","replacedBy":"136"},{"ruleId":"127","severity":1,"message":"137","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":14},{"ruleId":"127","severity":1,"message":"138","line":1,"column":26,"nodeType":"129","messageId":"130","endLine":1,"endColumn":42},{"ruleId":"127","severity":1,"message":"139","line":2,"column":35,"nodeType":"129","messageId":"130","endLine":2,"endColumn":41},{"ruleId":"127","severity":1,"message":"140","line":2,"column":50,"nodeType":"129","messageId":"130","endLine":2,"endColumn":54},{"ruleId":"127","severity":1,"message":"141","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":20},{"ruleId":"127","severity":1,"message":"142","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":23},{"ruleId":"127","severity":1,"message":"143","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":24},{"ruleId":"127","severity":1,"message":"144","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":18},{"ruleId":"127","severity":1,"message":"145","line":3,"column":23,"nodeType":"129","messageId":"130","endLine":3,"endColumn":30},{"ruleId":"127","severity":1,"message":"137","line":3,"column":32,"nodeType":"129","messageId":"130","endLine":3,"endColumn":36},{"ruleId":"127","severity":1,"message":"145","line":3,"column":3,"nodeType":"129","messageId":"130","endLine":3,"endColumn":10},{"ruleId":"127","severity":1,"message":"137","line":8,"column":3,"nodeType":"129","messageId":"130","endLine":8,"endColumn":7},{"ruleId":"127","severity":1,"message":"146","line":9,"column":3,"nodeType":"129","messageId":"130","endLine":9,"endColumn":12},{"ruleId":"127","severity":1,"message":"147","line":14,"column":7,"nodeType":"129","messageId":"130","endLine":14,"endColumn":16},{"ruleId":"148","severity":1,"message":"149","line":88,"column":6,"nodeType":"150","endLine":88,"endColumn":8,"suggestions":"151"},{"ruleId":"127","severity":1,"message":"145","line":3,"column":3,"nodeType":"129","messageId":"130","endLine":3,"endColumn":10},{"ruleId":"127","severity":1,"message":"145","line":3,"column":3,"nodeType":"129","messageId":"130","endLine":3,"endColumn":10},{"ruleId":"127","severity":1,"message":"152","line":4,"column":13,"nodeType":"129","messageId":"130","endLine":4,"endColumn":28},{"ruleId":"127","severity":1,"message":"153","line":7,"column":3,"nodeType":"129","messageId":"130","endLine":7,"endColumn":7},{"ruleId":"127","severity":1,"message":"154","line":8,"column":3,"nodeType":"129","messageId":"130","endLine":8,"endColumn":10},{"ruleId":"127","severity":1,"message":"146","line":10,"column":3,"nodeType":"129","messageId":"130","endLine":10,"endColumn":12},{"ruleId":"127","severity":1,"message":"145","line":3,"column":3,"nodeType":"129","messageId":"130","endLine":3,"endColumn":10},{"ruleId":"155","severity":1,"message":"156","line":41,"column":15,"nodeType":"157","endLine":41,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":62,"column":15,"nodeType":"157","endLine":62,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":83,"column":15,"nodeType":"157","endLine":83,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":104,"column":15,"nodeType":"157","endLine":104,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":125,"column":15,"nodeType":"157","endLine":125,"endColumn":18},{"ruleId":"127","severity":1,"message":"145","line":4,"column":3,"nodeType":"129","messageId":"130","endLine":4,"endColumn":10},{"ruleId":"127","severity":1,"message":"152","line":5,"column":13,"nodeType":"129","messageId":"130","endLine":5,"endColumn":28},{"ruleId":"127","severity":1,"message":"158","line":6,"column":3,"nodeType":"129","messageId":"130","endLine":6,"endColumn":9},{"ruleId":"127","severity":1,"message":"159","line":7,"column":3,"nodeType":"129","messageId":"130","endLine":7,"endColumn":7},{"ruleId":"127","severity":1,"message":"153","line":8,"column":3,"nodeType":"129","messageId":"130","endLine":8,"endColumn":7},{"ruleId":"127","severity":1,"message":"160","line":9,"column":3,"nodeType":"129","messageId":"130","endLine":9,"endColumn":7},{"ruleId":"127","severity":1,"message":"137","line":10,"column":3,"nodeType":"129","messageId":"130","endLine":10,"endColumn":7},{"ruleId":"127","severity":1,"message":"146","line":11,"column":3,"nodeType":"129","messageId":"130","endLine":11,"endColumn":12},{"ruleId":"127","severity":1,"message":"161","line":14,"column":7,"nodeType":"129","messageId":"130","endLine":14,"endColumn":18},{"ruleId":"127","severity":1,"message":"158","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"144","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":18},{"ruleId":"127","severity":1,"message":"159","line":5,"column":3,"nodeType":"129","messageId":"130","endLine":5,"endColumn":7},{"ruleId":"127","severity":1,"message":"162","line":15,"column":7,"nodeType":"129","messageId":"130","endLine":15,"endColumn":13},"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","no-native-reassign",["163"],"no-negated-in-lhs",["164"],["163"],["164"],"'Grid' is defined but never used.","'SemanticUIHeader' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'ExpensesList' is defined but never used.","'ExpensesSummary' is defined but never used.","'ExpensesCategory' is defined but never used.","'Categories' is defined but never used.","'Segment' is defined but never used.","'Container' is defined but never used.","'paragraph' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["165"],"'SemantiUiHeader' is defined but never used.","'Icon' is defined but never used.","'Divider' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Header' is defined but never used.","'Item' is defined but never used.","'Card' is defined but never used.","'groceryMock' is assigned a value but never used.","'toggle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},"Update the dependencies array to be: [props]",{"range":"168","text":"169"},[1808,1810],"[props]"]